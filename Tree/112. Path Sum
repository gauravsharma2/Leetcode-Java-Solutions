/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int count=0;
    public boolean hasPathSum(TreeNode root, int targetSum) {
        System.out.println(targetSum);
        if(root==null)
        return false;
        if(root.left == null && root.right == null) {
            return targetSum == root.val;
        }
        boolean hasLeftSum = false;
        boolean hasRightSum = false;

        if(root.left!=null)
            hasLeftSum=hasPathSum(root.left, targetSum-root.val);
        if(root.right!=null)    
            hasRightSum=hasPathSum(root.right, targetSum-root.val);
            return hasLeftSum || hasRightSum;
        }
        
}
